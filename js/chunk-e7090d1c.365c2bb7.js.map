{"version":3,"sources":["webpack:///../../../src/components/VList/VList.ts","webpack:///../../../src/directives/click-outside/index.ts","webpack:///../../../src/components/VList/VListItem.ts","webpack:///../../../src/directives/resize/index.ts","webpack:///../../../src/mixins/returnable/index.ts","webpack:///../../src/util/ThemeProvider.ts","webpack:///../../../src/components/VMenu/VMenu.ts"],"names":["name","provide","isInList","list","this","inject","isInMenu","default","isInNav","props","dense","disabled","expand","flat","nav","rounded","shaped","subheader","threeLine","tile","type","twoLine","Boolean","data","groups","computed","classes","methods","register","unregister","index","findIndex","g","content","splice","listClick","group","render","staticClass","class","style","attrs","role","attrs$","h","setBackgroundColor","$slots","closeConditional","directive","binding","isActive","e","elements","el","setTimeout","ClickOutside","inserted","onClick","app","document","unbind","baseMixins","directives","Ripple","inheritAttrs","isInGroup","activeClass","listItemGroup","inactive","link","selectable","tag","value","proxyClass","isClickable","themeClasses","created","$attrs","hasOwnProperty","click","$el","blur","genAttrs","tabindex","String","keydown","children","$scopedSlots","active","toggle","setTextColor","callback","options","passive","window","Resize","returnValue","originalValue","watch","save","mixins","root","isDark","node","theme","auto","closeOnClick","closeOnContentClick","disableKeys","maxHeight","Number","offsetX","offsetY","openOnClick","openOnHover","origin","transition","calculatedTopAuto","defaultOffset","hasJustFocused","listIndex","resizeTimeout","selectedIndex","tiles","activeTile","calculatedLeft","menuWidth","Math","dimensions","parseFloat","calcXOverflow","calcLeft","calculatedMaxHeight","height","calculatedMaxWidth","calculatedMinWidth","minWidth","activator","width","pageWidth","isNaN","parseInt","calculatedTop","top","calcYOverflow","hasClickableTiles","find","styles","maxWidth","left","transformOrigin","zIndex","activeZIndex","isContentActive","next","prev","classList","remove","mounted","activate","requestAnimationFrame","calcScrollPosition","$refs","maxScrollTop","calcLeftAuto","calcTopAuto","Array","tileDistanceFromMenuTop","firstTileOffsetTop","computedTop","changeListIndex","target","contains","genActivatorListeners","listeners","genTransition","$createElement","genDirectives","args","include","genContent","menuable__content__active","contentClass","ref","on","onKeyDown","showLazyContent","getTiles","querySelectorAll","mouseEnterHandler","mouseLeaveHandler","nextTile","prevTile","onResize","clearTimeout","attach","arg","ThemeProvider","light","dark"],"mappings":"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","file":"js/chunk-e7090d1c.365c2bb7.js","sourcesContent":["// Styles\nimport './VList.sass'\nimport VListGroup from './VListGroup'\n\n// Components\nimport VSheet from '../VSheet/VSheet'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VListGroupInstance = InstanceType<typeof VListGroup>\n\ninterface options extends InstanceType<typeof VSheet> {\n  isInMenu: boolean\n  isInNav: boolean\n}\n\n/* @vue/component */\nexport default VSheet.extend<options>().extend({\n  name: 'v-list',\n\n  provide (): object {\n    return {\n      isInList: true,\n      list: this,\n    }\n  },\n\n  inject: {\n    isInMenu: {\n      default: false,\n    },\n    isInNav: {\n      default: false,\n    },\n  },\n\n  props: {\n    dense: Boolean,\n    disabled: Boolean,\n    expand: Boolean,\n    flat: Boolean,\n    nav: Boolean,\n    rounded: Boolean,\n    shaped: Boolean,\n    subheader: Boolean,\n    threeLine: Boolean,\n    tile: {\n      type: Boolean,\n      default: true,\n    },\n    twoLine: Boolean,\n  },\n\n  data: () => ({\n    groups: [] as VListGroupInstance[],\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSheet.options.computed.classes.call(this),\n        'v-list--dense': this.dense,\n        'v-list--disabled': this.disabled,\n        'v-list--flat': this.flat,\n        'v-list--nav': this.nav,\n        'v-list--rounded': this.rounded,\n        'v-list--shaped': this.shaped,\n        'v-list--subheader': this.subheader,\n        'v-list--two-line': this.twoLine,\n        'v-list--three-line': this.threeLine,\n      }\n    },\n  },\n\n  methods: {\n    register (content: VListGroupInstance) {\n      this.groups.push(content)\n    },\n    unregister (content: VListGroupInstance) {\n      const index = this.groups.findIndex(g => g._uid === content._uid)\n\n      if (index > -1) this.groups.splice(index, 1)\n    },\n    listClick (uid: number) {\n      if (this.expand) return\n\n      for (const group of this.groups) {\n        group.toggle(uid)\n      }\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-list',\n      class: this.classes,\n      style: this.styles,\n      attrs: {\n        role: this.isInNav || this.isInMenu ? undefined : 'list',\n        ...this.attrs$,\n      },\n    }\n\n    return h('div', this.setBackgroundColor(this.color, data), [this.$slots.default])\n  },\n})\n","import { VNodeDirective } from 'vue/types/vnode'\n\ninterface ClickOutsideBindingArgs {\n  closeConditional?: (e: Event) => boolean\n  include?: () => HTMLElement[]\n}\n\ninterface ClickOutsideDirective extends VNodeDirective {\n  value?: (e: Event) => void\n  args?: ClickOutsideBindingArgs\n}\n\nfunction closeConditional () {\n  return false\n}\n\nfunction directive (e: PointerEvent, el: HTMLElement, binding: ClickOutsideDirective): void {\n  // Args may not always be supplied\n  binding.args = binding.args || {}\n\n  // If no closeConditional was supplied assign a default\n  const isActive = (binding.args.closeConditional || closeConditional)\n\n  // The include element callbacks below can be expensive\n  // so we should avoid calling them when we're not active.\n  // Explicitly check for false to allow fallback compatibility\n  // with non-toggleable components\n  if (!e || isActive(e) === false) return\n\n  // If click was triggered programmaticaly (domEl.click()) then\n  // it shouldn't be treated as click-outside\n  // Chrome/Firefox support isTrusted property\n  // IE/Edge support pointerType property (empty if not triggered\n  // by pointing device)\n  if (('isTrusted' in e && !e.isTrusted) ||\n    ('pointerType' in e && !e.pointerType)\n  ) return\n\n  // Check if additional elements were passed to be included in check\n  // (click must be outside all included elements, if any)\n  const elements = (binding.args.include || (() => []))()\n  // Add the root element for the component this directive was defined on\n  elements.push(el)\n\n  // Check if it's a click outside our elements, and then if our callback returns true.\n  // Non-toggleable components should take action in their callback and return falsy.\n  // Toggleable can return true if it wants to deactivate.\n  // Note that, because we're in the capture phase, this callback will occur before\n  // the bubbling click event on any outside elements.\n  !elements.some(el => el.contains(e.target as Node)) && setTimeout(() => {\n    isActive(e) && binding.value && binding.value(e)\n  }, 0)\n}\n\nexport const ClickOutside = {\n  // [data-app] may not be found\n  // if using bind, inserted makes\n  // sure that the root element is\n  // available, iOS does not support\n  // clicks on body\n  inserted (el: HTMLElement, binding: ClickOutsideDirective) {\n    const onClick = (e: Event) => directive(e as PointerEvent, el, binding)\n    // iOS does not recognize click events on document\n    // or body, this is the entire purpose of the v-app\n    // component and [data-app], stop removing this\n    const app = document.querySelector('[data-app]') ||\n      document.body // This is only for unit tests\n    app.addEventListener('click', onClick, true)\n    el._clickOutside = onClick\n  },\n\n  unbind (el: HTMLElement) {\n    if (!el._clickOutside) return\n\n    const app = document.querySelector('[data-app]') ||\n      document.body // This is only for unit tests\n    app && app.removeEventListener('click', el._clickOutside, true)\n    delete el._clickOutside\n  },\n}\n\nexport default ClickOutside\n","// Styles\nimport './VListItem.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Routable from '../../mixins/routable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\n\n// Directives\nimport Ripple from '../../directives/ripple'\n\n// Utilities\nimport { keyCodes } from './../../util/helpers'\nimport { ExtractVue } from './../../util/mixins'\nimport { removed } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nconst baseMixins = mixins(\n  Colorable,\n  Routable,\n  Themeable,\n  GroupableFactory('listItemGroup'),\n  ToggleableFactory('inputValue')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  isInGroup: boolean\n  isInList: boolean\n  isInMenu: boolean\n  isInNav: boolean\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-list-item',\n\n  directives: {\n    Ripple,\n  },\n\n  inheritAttrs: false,\n\n  inject: {\n    isInGroup: {\n      default: false,\n    },\n    isInList: {\n      default: false,\n    },\n    isInMenu: {\n      default: false,\n    },\n    isInNav: {\n      default: false,\n    },\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.listItemGroup) return ''\n\n        return this.listItemGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    dense: Boolean,\n    inactive: Boolean,\n    link: Boolean,\n    selectable: {\n      type: Boolean,\n    },\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    threeLine: Boolean,\n    twoLine: Boolean,\n    value: null as any as PropValidator<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-list-item--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-list-item': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-list-item--dense': this.dense,\n        'v-list-item--disabled': this.disabled,\n        'v-list-item--link': this.isClickable && !this.inactive,\n        'v-list-item--selectable': this.selectable,\n        'v-list-item--three-line': this.threeLine,\n        'v-list-item--two-line': this.twoLine,\n        ...this.themeClasses,\n      }\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.listItemGroup\n      )\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('avatar')) {\n      removed('avatar', this)\n    }\n  },\n\n  methods: {\n    click (e: MouseEvent | KeyboardEvent) {\n      if (e.detail) this.$el.blur()\n\n      this.$emit('click', e)\n\n      this.to || this.toggle()\n    },\n    genAttrs () {\n      const attrs: Record<string, any> = {\n        'aria-disabled': this.disabled ? true : undefined,\n        tabindex: this.isClickable && !this.disabled ? 0 : -1,\n        ...this.$attrs,\n      }\n\n      if (this.$attrs.hasOwnProperty('role')) {\n        // do nothing, role already provided\n      } else if (this.isInNav) {\n        // do nothing, role is inherit\n      } else if (this.isInGroup) {\n        attrs.role = 'listitem'\n        attrs['aria-selected'] = String(this.isActive)\n      } else if (this.isInMenu) {\n        attrs.role = this.isClickable ? 'menuitem' : undefined\n      } else if (this.isInList) {\n        attrs.role = 'listitem'\n      }\n\n      return attrs\n    },\n  },\n\n  render (h): VNode {\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      ...this.genAttrs(),\n    }\n    data.on = {\n      ...data.on,\n      click: this.click,\n      keydown: (e: KeyboardEvent) => {\n        /* istanbul ignore else */\n        if (e.keyCode === keyCodes.enter) this.click(e)\n\n        this.$emit('keydown', e)\n      },\n    }\n\n    const children = this.$scopedSlots.default\n      ? this.$scopedSlots.default({\n        active: this.isActive,\n        toggle: this.toggle,\n      })\n      : this.$slots.default\n\n    tag = this.inactive ? 'div' : tag\n\n    return h(tag, this.setTextColor(this.color, data), children)\n  },\n})\n","import { VNodeDirective } from 'vue/types/vnode'\n\ninterface ResizeVNodeDirective extends VNodeDirective {\n  value?: () => void\n  options?: boolean | AddEventListenerOptions\n}\n\nfunction inserted (el: HTMLElement, binding: ResizeVNodeDirective) {\n  const callback = binding.value!\n  const options = binding.options || { passive: true }\n\n  window.addEventListener('resize', callback, options)\n  el._onResize = {\n    callback,\n    options,\n  }\n\n  if (!binding.modifiers || !binding.modifiers.quiet) {\n    callback()\n  }\n}\n\nfunction unbind (el: HTMLElement) {\n  if (!el._onResize) return\n\n  const { callback, options } = el._onResize\n  window.removeEventListener('resize', callback, options)\n  delete el._onResize\n}\n\nexport const Resize = {\n  inserted,\n  unbind,\n}\n\nexport default Resize\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'returnable',\n\n  props: {\n    returnValue: null as any,\n  },\n\n  data: () => ({\n    isActive: false,\n    originalValue: null as any,\n  }),\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.originalValue = this.returnValue\n      } else {\n        this.$emit('update:return-value', this.originalValue)\n      }\n    },\n  },\n\n  methods: {\n    save (value: any) {\n      this.originalValue = value\n      setTimeout(() => {\n        this.isActive = false\n      })\n    },\n  },\n})\n","import { VNode } from 'vue'\nimport Themeable from '../mixins/themeable'\nimport mixins from './mixins'\n\n/* @vue/component */\nexport default mixins(Themeable).extend({\n  name: 'theme-provider',\n\n  props: {\n    root: Boolean,\n  },\n\n  computed: {\n    isDark (): boolean {\n      return this.root ? this.rootIsDark : Themeable.options.computed.isDark.call(this)\n    },\n  },\n\n  render (): VNode {\n    return this.$slots.default! && this.$slots.default!.find(node => !node.isComment && node.text !== ' ')!\n  },\n})\n","// Styles\nimport './VMenu.sass'\n\n// Mixins\nimport Delayable from '../../mixins/delayable'\nimport Dependent from '../../mixins/dependent'\nimport Detachable from '../../mixins/detachable'\nimport Menuable from '../../mixins/menuable'\nimport Returnable from '../../mixins/returnable'\nimport Toggleable from '../../mixins/toggleable'\nimport Themeable from '../../mixins/themeable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\nimport Resize from '../../directives/resize'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { convertToUnit, keyCodes } from '../../util/helpers'\nimport ThemeProvider from '../../util/ThemeProvider'\nimport { removed } from '../../util/console'\n\n// Types\nimport { VNode, VNodeDirective, VNodeData } from 'vue'\n\nconst baseMixins = mixins(\n  Dependent,\n  Delayable,\n  Detachable,\n  Menuable,\n  Returnable,\n  Toggleable,\n  Themeable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-menu',\n\n  provide (): object {\n    return {\n      isInMenu: true,\n      // Pass theme through to default slot\n      theme: this.theme,\n    }\n  },\n\n  directives: {\n    ClickOutside,\n    Resize,\n  },\n\n  props: {\n    auto: Boolean,\n    closeOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    closeOnContentClick: {\n      type: Boolean,\n      default: true,\n    },\n    disabled: Boolean,\n    disableKeys: Boolean,\n    maxHeight: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    offsetX: Boolean,\n    offsetY: Boolean,\n    openOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    openOnHover: Boolean,\n    origin: {\n      type: String,\n      default: 'top left',\n    },\n    transition: {\n      type: [Boolean, String],\n      default: 'v-menu-transition',\n    },\n  },\n\n  data () {\n    return {\n      calculatedTopAuto: 0,\n      defaultOffset: 8,\n      hasJustFocused: false,\n      listIndex: -1,\n      resizeTimeout: 0,\n      selectedIndex: null as null | number,\n      tiles: [] as HTMLElement[],\n    }\n  },\n\n  computed: {\n    activeTile (): HTMLElement | undefined {\n      return this.tiles[this.listIndex]\n    },\n    calculatedLeft (): string {\n      const menuWidth = Math.max(this.dimensions.content.width, parseFloat(this.calculatedMinWidth))\n\n      if (!this.auto) return this.calcLeft(menuWidth) || '0'\n\n      return convertToUnit(this.calcXOverflow(this.calcLeftAuto(), menuWidth)) || '0'\n    },\n    calculatedMaxHeight (): string {\n      const height = this.auto\n        ? '200px'\n        : convertToUnit(this.maxHeight)\n\n      return height || '0'\n    },\n    calculatedMaxWidth (): string {\n      return convertToUnit(this.maxWidth) || '0'\n    },\n    calculatedMinWidth (): string {\n      if (this.minWidth) {\n        return convertToUnit(this.minWidth) || '0'\n      }\n\n      const minWidth = Math.min(\n        this.dimensions.activator.width +\n        Number(this.nudgeWidth) +\n        (this.auto ? 16 : 0),\n        Math.max(this.pageWidth - 24, 0)\n      )\n\n      const calculatedMaxWidth = isNaN(parseInt(this.calculatedMaxWidth))\n        ? minWidth\n        : parseInt(this.calculatedMaxWidth)\n\n      return convertToUnit(Math.min(\n        calculatedMaxWidth,\n        minWidth\n      )) || '0'\n    },\n    calculatedTop (): string {\n      const top = !this.auto\n        ? this.calcTop()\n        : convertToUnit(this.calcYOverflow(this.calculatedTopAuto))\n\n      return top || '0'\n    },\n    hasClickableTiles (): boolean {\n      return Boolean(this.tiles.find(tile => tile.tabIndex > -1))\n    },\n    styles (): object {\n      return {\n        maxHeight: this.calculatedMaxHeight,\n        minWidth: this.calculatedMinWidth,\n        maxWidth: this.calculatedMaxWidth,\n        top: this.calculatedTop,\n        left: this.calculatedLeft,\n        transformOrigin: this.origin,\n        zIndex: this.zIndex || this.activeZIndex,\n      }\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (!val) this.listIndex = -1\n    },\n    isContentActive (val) {\n      this.hasJustFocused = val\n    },\n    listIndex (next, prev) {\n      if (next in this.tiles) {\n        const tile = this.tiles[next]\n        tile.classList.add('v-list-item--highlighted')\n        this.$refs.content.scrollTop = tile.offsetTop - tile.clientHeight\n      }\n\n      prev in this.tiles &&\n        this.tiles[prev].classList.remove('v-list-item--highlighted')\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  mounted () {\n    this.isActive && this.callActivate()\n  },\n\n  methods: {\n    activate () {\n      // Update coordinates and dimensions of menu\n      // and its activator\n      this.updateDimensions()\n      // Start the transition\n      requestAnimationFrame(() => {\n        // Once transitioning, calculate scroll and top position\n        this.startTransition().then(() => {\n          if (this.$refs.content) {\n            this.calculatedTopAuto = this.calcTopAuto()\n            this.auto && (this.$refs.content.scrollTop = this.calcScrollPosition())\n          }\n        })\n      })\n    },\n    calcScrollPosition () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement\n      const maxScrollTop = $el.scrollHeight - $el.offsetHeight\n\n      return activeTile\n        ? Math.min(maxScrollTop, Math.max(0, activeTile.offsetTop - $el.offsetHeight / 2 + activeTile.offsetHeight / 2))\n        : $el.scrollTop\n    },\n    calcLeftAuto () {\n      return parseInt(this.dimensions.activator.left - this.defaultOffset * 2)\n    },\n    calcTopAuto () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement | null\n\n      if (!activeTile) {\n        this.selectedIndex = null\n      }\n\n      if (this.offsetY || !activeTile) {\n        return this.computedTop\n      }\n\n      this.selectedIndex = Array.from(this.tiles).indexOf(activeTile)\n\n      const tileDistanceFromMenuTop = activeTile.offsetTop - this.calcScrollPosition()\n      const firstTileOffsetTop = ($el.querySelector('.v-list-item') as HTMLElement).offsetTop\n\n      return this.computedTop - tileDistanceFromMenuTop - firstTileOffsetTop - 1\n    },\n    changeListIndex (e: KeyboardEvent) {\n      // For infinite scroll and autocomplete, re-evaluate children\n      this.getTiles()\n\n      if (!this.isActive || !this.hasClickableTiles) {\n        return\n      } else if (e.keyCode === keyCodes.tab) {\n        this.isActive = false\n        return\n      } else if (e.keyCode === keyCodes.down) {\n        this.nextTile()\n      } else if (e.keyCode === keyCodes.up) {\n        this.prevTile()\n      } else if (e.keyCode === keyCodes.enter && this.listIndex !== -1) {\n        this.tiles[this.listIndex].click()\n      } else { return }\n      // One of the conditions was met, prevent default action (#2988)\n      e.preventDefault()\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n\n      return this.isActive &&\n        !this._isDestroyed &&\n        this.closeOnClick &&\n        !this.$refs.content.contains(target)\n    },\n    genActivatorListeners () {\n      const listeners = Menuable.options.methods.genActivatorListeners.call(this)\n\n      if (!this.disableKeys) {\n        listeners.keydown = this.onKeyDown\n      }\n\n      return listeners\n    },\n    genTransition (): VNode {\n      if (!this.transition) return this.genContent()\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n        },\n      }, [this.genContent()])\n    },\n    genDirectives (): VNodeDirective[] {\n      const directives: VNodeDirective[] = [{\n        name: 'show',\n        value: this.isContentActive,\n      }]\n\n      // Do not add click outside for hover menu\n      if (!this.openOnHover && this.closeOnClick) {\n        directives.push({\n          name: 'click-outside',\n          value: () => { this.isActive = false },\n          args: {\n            closeConditional: this.closeConditional,\n            include: () => [this.$el, ...this.getOpenDependentElements()],\n          },\n        } as any)\n      }\n\n      return directives\n    },\n    genContent (): VNode {\n      const options = {\n        attrs: {\n          ...this.getScopeIdAttrs(),\n          role: 'role' in this.$attrs ? this.$attrs.role : 'menu',\n        },\n        staticClass: 'v-menu__content',\n        class: {\n          ...this.rootThemeClasses,\n          'v-menu__content--auto': this.auto,\n          'v-menu__content--fixed': this.activatorFixed,\n          menuable__content__active: this.isActive,\n          [this.contentClass.trim()]: true,\n        },\n        style: this.styles,\n        directives: this.genDirectives(),\n        ref: 'content',\n        on: {\n          click: (e: Event) => {\n            e.stopPropagation()\n\n            const target = e.target as HTMLElement\n\n            if (target.getAttribute('disabled')) return\n            if (this.closeOnContentClick) this.isActive = false\n          },\n          keydown: this.onKeyDown,\n        },\n      } as VNodeData\n\n      if (!this.disabled && this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseenter = this.mouseEnterHandler\n      }\n\n      if (this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseleave = this.mouseLeaveHandler\n      }\n\n      return this.$createElement(\n        'div',\n        options,\n        this.showLazyContent(this.getContentSlot())\n      )\n    },\n    getTiles () {\n      this.tiles = Array.from(this.$refs.content.querySelectorAll('.v-list-item'))\n    },\n    mouseEnterHandler () {\n      this.runDelay('open', () => {\n        if (this.hasJustFocused) return\n\n        this.hasJustFocused = true\n        this.isActive = true\n      })\n    },\n    mouseLeaveHandler (e: MouseEvent) {\n      // Prevent accidental re-activation\n      this.runDelay('close', () => {\n        if (this.$refs.content.contains(e.relatedTarget as HTMLElement)) return\n\n        requestAnimationFrame(() => {\n          this.isActive = false\n          this.callDeactivate()\n        })\n      })\n    },\n    nextTile () {\n      const tile = this.tiles[this.listIndex + 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = -1\n        this.nextTile()\n\n        return\n      }\n\n      this.listIndex++\n      if (tile.tabIndex === -1) this.nextTile()\n    },\n    prevTile () {\n      const tile = this.tiles[this.listIndex - 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = this.tiles.length\n        this.prevTile()\n\n        return\n      }\n\n      this.listIndex--\n      if (tile.tabIndex === -1) this.prevTile()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc) {\n        // Wait for dependent elements to close first\n        setTimeout(() => { this.isActive = false })\n        const activator = this.getActivator()\n        this.$nextTick(() => activator && activator.focus())\n      } else if (\n        !this.isActive &&\n        [keyCodes.up, keyCodes.down].includes(e.keyCode)\n      ) {\n        this.isActive = true\n      }\n\n      // Allow for isActive watcher to generate tile list\n      this.$nextTick(() => this.changeListIndex(e))\n    },\n    onResize () {\n      if (!this.isActive) return\n\n      // Account for screen resize\n      // and orientation change\n      // eslint-disable-next-line no-unused-expressions\n      this.$refs.content.offsetWidth\n      this.updateDimensions()\n\n      // When resizing to a smaller width\n      // content width is evaluated before\n      // the new activator width has been\n      // set, causing it to not size properly\n      // hacky but will revisit in the future\n      clearTimeout(this.resizeTimeout)\n      this.resizeTimeout = window.setTimeout(this.updateDimensions, 100)\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-menu',\n      class: {\n        'v-menu--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n      directives: [{\n        arg: '500',\n        name: 'resize',\n        value: this.onResize,\n      }],\n    }\n\n    return h('div', data, [\n      !this.activator && this.genActivator(),\n      this.$createElement(ThemeProvider, {\n        props: {\n          root: true,\n          light: this.light,\n          dark: this.dark,\n        },\n      }, [this.genTransition()]),\n    ])\n  },\n})\n"],"sourceRoot":""}